{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAAQC,KAC1BC,YAAW,KACLN,EACHI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAEpDA,EAAM,G,CAxBAQ,SAASC,cAAc,SAc/BC,iBAAiB,UAZtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAaF,EAAMG,cAAcd,MAAMe,cAC3C,MAAMC,EAAYL,EAAMG,cAAcG,KAAKF,cACrCG,EAAQP,EAAMG,cAAcK,OAAOJ,cAEzC,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAOE,GAAK,EAC7BP,GAA0BG,EAC1BlB,EAAcsB,EAAGP,GAAYQ,MAAKC,GAAQC,EAAA3B,GAAS4B,OAAOC,QAAQH,KAAOI,OAAMC,GAASJ,EAAA3B,GAAS4B,OAAOI,QAAQD,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector(\".form\")\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  \n  let firstDelay = event.currentTarget.delay.valueAsNumber;\n  const delayStep = event.currentTarget.step.valueAsNumber;\n  const amoun = event.currentTarget.amount.valueAsNumber;\n\n  for (let i = 1; i <= amoun; i += 1) {\n      firstDelay = firstDelay + delayStep;\n      createPromise(i, firstDelay).then(data => Notiflix.Notify.success(data)).catch(error => Notiflix.Notify.failure(error))\n  };\n}\nform.addEventListener(\"submit\", handleSubmit);\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve,reject ) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  })\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","firstDelay","currentTarget","valueAsNumber","delayStep","step","amoun","amount","i","then","data","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.5563cd99.js.map"}